openapi: 3.0.1
info:
  title: Grocery List
  description: 'This is a simple API for the Grocery List App'
  version: 1.0.0
servers:
  - url: http://localhost:8080/rest/
    description: The Grocery List server
tags:
  - name: Product
    description: Operations related to Products of the Grocery List
paths:
  /products:
    get:
      tags:
        - Product
      summary: Gets the collection of products
      operationId: findAllProducts
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
              examples:
                "A collection of products":
                  value:
                    [
                      { id: "1", name: "Milk", description: "1 Bottle" },
                      { id: "2", name: "Bananas", description: "1Kg" }
                    ]
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'
    post:
      tags:
        - Product
      summary: Creates a new Product
      operationId: saveProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveProductRequest'
            examples:
              "Creates a new Product":
                value:
                  name: "Bananas"
                  description: "Buy 1Kg"
              "Creates a new Product only with the name":
                value:
                  name: "Cucumbers"
      responses:
        201:
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                id: "2"
                name: "Bananas"
                description: "Buy 1Kg"
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'
  /products/{id}:
    put:
      tags:
        - Product
      summary: Updates a Product given its ID
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: "The id of the Product"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveProductRequest'
            examples:
              "Update the name of a Product":
                value:
                  name: "Milk"
              "Update the name and description of a Product":
                value:
                  name: "Milk"
                  description: "2 bottles of Milk"
      responses:
        200:
          description: "The Product was succefully updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                id: 1
                name: "Milk"
                description: "2 bottles of Milk"
        400:
          description: "Request data is not valid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                "Invalid name":
                  value:
                    errorCode: "VALIDATION_ERROR"
                    errorMessage: "The name must not be null or empty"
        402:
          description: "Product not found with the specified ID"
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'
    delete:
      tags:
        - Product
      summary: Deletes a Product given its ID
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: "The id of the Product"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: "The Product was succefully deleted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
              example:
                id: 1
                name: "Milk"
                description: "2 bottles of Milk"
        402:
          description: "Product not found with the specified ID"
        500:
          $ref: '#/components/responses/InternalServerErrorResponse'

components:
  responses:
    InternalServerErrorResponse:
      description: "Something were wrong with production servers"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: "INTERNAL_SERVER_ERROR"
            errorMessage: "Something were wrong with production servers"
  schemas:
    ProductResponse:
      description: "Represents a Product in the Grocery List"
      properties:
        id:
          type: integer
          format: int64
          description: "The Id of the product"
        name:
          type: string
          description: "The name of the product"
        description:
          type: string
          description: "Some comments about the Product"
    SaveProductRequest:
      description: "Represents the input arguments to create or update a Product in the grocery list"
      properties:
        name:
          type: string
          description: "The name of the Product"
        description:
          type: string
          description: "Some comments about the Product"
      required:
        - "name"
    ErrorResponse:
      description: "Represents the response of a failed action, and contains details about the failure."
      properties:
        errorCode:
          type: string
          enum:
            - "VALIDATION_ERROR"
            - "INTERNAL_SERVER_ERROR"
          description: >
            The code for different type of errors:
              * `VALIDATION_ERROR` - input data doesn't comply with validation rules
              * `INTERNAL_SERVER_ERROR` - Some error with the production servers
        errorMessage:
          type: string
          description: "A user-friendly message with the details of the error."